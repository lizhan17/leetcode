
"""
failed. ref: leetcode

-conclusion
this problem shows how to do a add function linked list

we need to keep the carry and stop when linked list point to end(None)
-python
None means init. 
a=11
a= None
print(a) : None

- python
python pairwise
a,b = (c,d)
a,b,c = [1,2,3]


- python
divmod(x,y)
get the  in pair(quotient,remainder)

- python 

while 1 or 0
True is not a keyword in python2 it evalues to 1


- data structure
a listnode as a input.
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
 
each time it gives us a ListNode.
then we return a ListNode not a linked list totally.
In chinese 这题目输入是node 不是整个 linked list 。而且linked list的特点就是dynamic 可以增长。
而且我们不知道数字的长度就是linked list的长度
we don't know the size of the singly linked list. we can only use the node


"""

# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

def addTwoNumbers(self, l1, l2):
    carry = 0  ## in Chinese 进位
    root = n = ListNode(0)
    
    while l1 or l2 or carry:  # from the input node to the last node       # stop when all is empty
        v1 = v2 = 0    # v1 and v2 are the temporate variable to store the things to add 
        if l1:   # if l1 is not empty,we just retrive value of node and set l1 to the next node
            v1 = l1.val
            l1 = l1.next
        if l2:
            v2 = l2.val
            l2 = l2.next
        carry, val = divmod(v1+v2+carry, 10)
        n.next = ListNode(val)
        n = n.next
    return root.next


